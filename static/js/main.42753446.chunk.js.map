{"version":3,"sources":["logo.svg","component/header/index.js","component/search/index.js","component/filter/index.js","container/searchAndFilter/index.js","component/boxCountry/index.js","api/index.js","pages/home/index.js","pages/detailCountry/index.js","routers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","Search","useState","value","setValue","onClick","eventSearch","Provider","size","color","onChange","event","target","placeholder","Filter","optionCountryVisible","setOptionCountryVisible","eventFilterRegion","SearchAndFilter","BoxCountry","dataCountry","name","flag","population","capital","region","console","log","to","style","backgroundImage","get","endPoint","Promise","resolver","reject","fetch","then","response","status","data","json","catch","e","Home","countries","setCountries","useEffect","getlAllCountries","a","searchCountry","nameCountry","country","filterCountryForRegion","nameRegion","map","element","index","key","DetailCountry","infoCountry","setInfoCountry","useParams","getCountry","src","Routers","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.42753446.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './style.css';\r\nexport default function Header(props){\r\n    return(\r\n   <header>\r\n       <div className=\"flex center\">\r\n           <div className=\"title\">\r\n                    <span>Pa√≠ses do mundo</span>\r\n               </div>\r\n        \r\n       </div>\r\n   </header>\r\n    ) \r\n}     ","import React,{useState} from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport './style.css';\r\nexport default function Search (props){\r\n    const [value,setValue] = useState('');\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <div className=\"iconSearch\"  onClick={()=>props.eventSearch(value)}>\r\n                <IconContext.Provider value={{size:'1em',color:'white' }}>\r\n                <FaSearch />\r\n                </IconContext.Provider>         \r\n            </div>\r\n            <input \r\n            onChange={(event)=>{setValue(event.target.value);props.eventSearch(event.target.value)} }\r\n            placeholder={'buscar pais'}\r\n            value={value}></input>\r\n        </div>\r\n    )\r\n}    ","import React, { useState } from 'react';\r\nimport { IoIosArrowRoundDown } from \"react-icons/io\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport './style.css';\r\nexport default function Filter(props){\r\n\r\n    const [optionCountryVisible,setOptionCountryVisible] = useState(false);\r\n    return(\r\n        <div className=\"filter\">\r\n                <div className=\"filterRegion\" onClick={()=>setOptionCountryVisible(!optionCountryVisible)} >\r\n                    <span>Filtro</span>\r\n                    <div className=\"icon\">\r\n                    <IconContext.Provider value={{ color: \"white\", className: \"global-class-name\" }}>\r\n                            <div>\r\n                            <IoIosArrowRoundDown />\r\n                            </div>\r\n                         </IconContext.Provider>\r\n                     </div> \r\n                </div>\r\n                {optionCountryVisible&&\r\n                <div className=\"optionRegion\">  \r\n                        <div className=\"singleRegion\" onClick={()=>{props.eventFilterRegion('africa');setOptionCountryVisible(false)}}>\r\n                                <span>Africa</span>\r\n                            </div>\r\n                            <div className=\"singleRegion\" onClick={()=>{props.eventFilterRegion('americas');setOptionCountryVisible(false)}} >\r\n                                <span>America</span>\r\n                                </div>\r\n                                <div className=\"singleRegion\" onClick={()=>{props.eventFilterRegion('asia');setOptionCountryVisible(false) }} >\r\n                                <span>Asia</span>\r\n                                </div>\r\n                                <div className=\"singleRegion\" onClick={()=>{props.eventFilterRegion('europe');setOptionCountryVisible(false)}} >\r\n                                 <span>Europa</span>\r\n                                </div>\r\n                                <div className=\"singleRegion\" onClick={()=>{props.eventFilterRegion('oceania');setOptionCountryVisible(false)}}  >\r\n                                    <span>Oceania</span>\r\n                            </div> \r\n                    </div>\r\n}\r\n \r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Search from '../../component/search';\r\nimport Filter from '../../component/filter';\r\nimport './style.css'; \r\nexport default function SearchAndFilter(props){\r\n    return(\r\n        <div className=\"searchAndFilter center\">\r\n            <div className=\"flex center\"> \r\n                <Search eventSearch={(value)=>props.eventSearch(value)} ></Search>\r\n                <Filter\r\n                    eventFilterRegion={(value)=>props.eventFilterRegion(value)}\r\n                ></Filter>\r\n            </div>\r\n        </div>\r\n    )\r\n}     ","import React from 'react';\r\nimport './style.css';\r\nimport {\r\n    Link,\r\n  } from \"react-router-dom\";\r\nexport default function BoxCountry (props){\r\n    let {dataCountry} =props;\r\n    let {name,flag,population,capital,region}=dataCountry;\r\n    console.log(dataCountry)\r\n    return(\r\n\r\n        <div className ='boxCountry1' >\r\n        <div className=\"boxCountry\">\r\n        <Link to={`/listcountries/detail_country/${name}`}>\r\n            <div  className=\"boxImg\" style={ {backgroundImage: \"url(\" + flag + \")\" }} >     \r\n                </div>\r\n            <div className=\"boxText\"> \r\n           \r\n                    <h2>{name}</h2>\r\n               <div className=\"description\">\r\n             \r\n                   <span> <strong> Popula√ß√£o: </strong> <small>{population}</small></span>\r\n                   </div>     \r\n                   <div className=\"description\">\r\n                   <span><strong>Regi√£o: </strong><small>{region}</small></span>\r\n                   </div>     \r\n                   <div className=\"description\">\r\n                <span><strong>Capital: </strong><small>{capital}</small></span>\r\n                   </div>    \r\n                  \r\n            </div>\r\n            </Link>\r\n        </div>\r\n        \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n","import fetch from 'cross-fetch';\r\n\r\nexport const get=(endPoint)=>{\r\n    return new Promise((resolver,reject)=>{\r\n        fetch(endPoint)\r\n        .then((response)=>resolver({status:response.status,data:response.json()}))\r\n        .catch((e)=>console.log(e));\r\n       \r\n    })\r\n  \r\n}","import React, { useEffect, useState } from 'react';\r\nimport Header from '../../component/header';\r\nimport SearchAndFilter from '../../container/searchAndFilter';\r\nimport BoxCountry from '../../component/boxCountry';\r\nimport {get }from '../../api'\r\n\r\nimport './style.css';\r\n\r\nexport default function Home(props){\r\n                const [countries,setCountries] = useState([]);\r\n                useEffect(()=>{\r\n                       \r\n                        getlAllCountries();\r\n                },[])\r\n                \r\n               const getlAllCountries= async ()=>{\r\n                let countries = await  get('https://restcountries.eu/rest/v2/all')\r\n                if(countries.status==200){\r\n                        countries= await countries.data;\r\n                        console.log(countries)\r\n                        setCountries(countries)\r\n                }\r\n                }\r\n                const searchCountry = async(nameCountry)=>{\r\n                        let country = await get(`https://restcountries.eu/rest/v2/name/${nameCountry}`);\r\n                        if(country.status==200){\r\n                                country = await country.data;\r\n                                setCountries(country);                    }\r\n           \r\n                }\r\n                const filterCountryForRegion = async(nameRegion)=>{\r\n                        let region = await get(`https://restcountries.eu/rest/v2/region/${nameRegion}`);\r\n                        if(region.status==200){\r\n                                region = await region.data;\r\n                                setCountries(region);\r\n                        }\r\n                }        \r\n\r\n \r\nreturn(\r\n        <div className=\"home\">\r\n                <Header></Header>\r\n                <SearchAndFilter\r\n                        eventSearch ={(value)=>searchCountry(value)}\r\n                        eventFilterRegion={(region)=>filterCountryForRegion(region)}\r\n                ></SearchAndFilter>\r\n                <main className=\"center  flex\">\r\n                        {countries.map((element,index)=>\r\n                               <BoxCountry key={index} dataCountry={element} ></BoxCountry> \r\n                        )}\r\n                         \r\n                        </main>  \r\n            </div>\r\n    )\r\n}     ","import React, { useEffect,useState } from 'react';\r\nimport {\r\n\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport Header from '../../component/header'\r\nimport {get} from '../../api';\r\nimport './style.css';\r\nexport default function DetailCountry(){\r\n    let [infoCountry,setInfoCountry] = useState({});\r\n    let {name} = useParams();\r\n        useEffect(()=>{\r\n            getCountry();\r\n        },[])\r\n     \r\n        const getCountry= async()=>{\r\n           let country =  await get(`https://restcountries.eu/rest/v2/name/${name}`);\r\n                    if(country.status==200){\r\n                        country = await country.data;\r\n                        setInfoCountry(country[0]);\r\n                        console.log(country[0])\r\n                    }\r\n   \r\n       }\r\n\r\n    return(\r\n        <div className=\"detailCounty\">\r\n            <Header></Header>\r\n            <main className=\"center flex\" >\r\n                <div className=\"imgCountry\">\r\n                    <img src={infoCountry.flag}/>\r\n                </div>\r\n                <div className=\"descriptionCountry\">\r\n                        <div className=\"boxTitle\">\r\n                        <h2>{infoCountry.name}</h2>\r\n                        </div>\r\n                          <div className=\"flex\">\r\n                          <div className=\"boxText\">\r\n                            <span><strong>capital : </strong><small>{infoCountry.capital}</small></span><br/>\r\n                            <span><strong>popula√ß√£o : </strong><small>{infoCountry.population}</small></span>\r\n                            </div>\r\n                             <div className=\"boxText\"> \r\n                         <span><strong>continente </strong><small>{infoCountry.region}</small></span>\r\n                        </div>\r\n\r\n                          </div>\r\n                  \r\n                </div>\r\n            </main>\r\n        </div>\r\n    ) \r\n}    ","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Home from '../pages/home';\r\nimport DetailCountry from '../pages/detailCountry'\r\n\r\nexport default function Routers(){\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                 <Route exact path=\"/\">\r\n                     <Redirect to=\"/listcountries\" /> \r\n                </Route>\r\n                 <Route exact={true} path='/listcountries/' component={Home} ></Route>\r\n                 <Route path='/listcountries/detail_country/:name' component={DetailCountry}></Route>\r\n             \r\n            </Switch>\r\n        </Router>   \r\n    ) \r\n}    ","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './pages/home';\r\nimport Router from './routers'\r\nfunction App() {\r\n  return (\r\n    <Router></Router>\r\n  );\r\n}\r\n\r\nexport default App; \r\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n    <App />\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}